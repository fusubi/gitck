
VBS基础篇 - wscript 对象详解
一、wscript对象

描述：提供对 Windows 脚本宿主对象模型根对象的访问。
详述：WScript 对象是 Windows 脚本宿主对象模型层次结构的根对象。它可在任何脚本文件中使用，不需要特定的声明。
        WScript 对象提供对以下信息的访问命令行参数， 脚本文件的名称，宿主文件名， 宿主版本信息。
        WScript 对象可用来创建对象，连接对象， 与对象断开连接， 同步事件， 以编程方式停止脚本的执行，将信息输出到默认输出设备（Windows 对话框或命令控制台）。

        WScript 对象也可用来设置脚本运行的模式（交互模式或批处理模式）。
        就像刚才我们说的一样，对象通过两种其自有的特性想我们提供工具，这两种特性分别是“属性”和“方法”。

二、属性

1、Arguments 属性

描述：用于返回 Arguments 对象（这个对象我们以后会学，现在只需要了解就行）。
语法：object.Arguments
参数：object ，WScript 对象

例子：显示本vbs文件运行的参数

Set Arg = WScript.Arguments
For i = 0 To Arg.Count - 1
  MsgBox Arg(i)
Next
将上面这些代码保存为vbs文件，然后将一个或者数个任意的文件拖放到这个vbs文件上面上，那么他会逐个显示你拖放的文件。（这仅仅给出了一个实例，用到了Arguments对象，其的具体用法我们以后再了解）

2、FullName 属性

描述：返回主机可执行文件（CScript.exe 或 WScript.exe）的完全限定路径。
语法：object.FullName
参数：object ，WScript 对象

例子：显示本机wscript的路径
MsgBox wscript.fullname
在默认的情况下会显示"C:\WINDOWS\system32\wscript.exe"

3、Interactive 属性

描述：设置或确定脚本模式。
语法：object.Interactive
参数：object ，WScript 对象
说明：Interactive 属性返回一个布尔值。

有批处理和交互两种模式。在交互模式（默认模式）下，该脚本为用户提供交互功能。启用对 Windows 脚本宿主的输入和输出。该脚本可以将信息显示在对话框中并等待用户提供反馈。在批处理模式下，不支持这种类型的用户交互,所有对 WSH 的输入和输出被禁用。还可以使用 Windows 脚本宿主命令行开关 / / I（对于交互式）和 / / B（对于批处理模式）来设置脚本模式。

例子：显示本机的脚本模式
MsgBox WScript.Interactive

4、Name 属性
描述：返回 WScript 对象（主机可执行文件）的名称。
语法：object.Name
参数：object ，WScript 对象
例子：
MsgBox WScript.name

5、Path 属性

描述：返回包含主机可执行文件（CScript.exe 或 WScript.exe）的路径名称
语法：object.Path
参数：object ，WScript 对象
例子：
MsgBox WScript.Path
如果你的wscript.exe是在”C: \ WINDOWS \ system32 \ wscript.exe“那么本属性会显示”C: \ WINDOWS \ system32“

6、ScriptFullName 属性

描述：返回当前运行脚本的完整路径。
语法：object.ScriptFullName
参数：object ，WScript 对象
例子：显示本vbs的完整路径
MsgBox WScript.ScriptFullName

神奇吧，这个vbs竟然知道他自己的名字。

7、ScriptName 属性

描述：返回当前运行脚本的文件名。
语法：object.ScriptName
参数：object ，WScript 对象
说明：刚才我们知道了用ScriptFullName可以获取vbs文件自身的完整路径，加入你只想要这个文件的名字改怎么办？看例子。
例子：显示本VBS文件的名字
MsgBox WScript.ScriptName
怎么样？看到了吗？

8、Version 属性

描述：返回 Windows 脚本宿主的版本。
语法：object.Version
参数：object ，WScript 对象
例子：显示本机脚本宿主版本
MsgBox WScript.version

三、方法

1、CreateObject方法

描述：创建一个对象
语法：CreateObject(appname.objecttype,[servername])
解释：appname 必需的，Variant（字符串）。提供该对象的应用程序名。
        objecttype 必需的；Variant（字符串）。待创建对象的类型或类。
        servername 可选的； Variant (String). 要在其上创建对象的网络服务器名称。
说明：要创建 ActiveX 对象，只需将 CreateObject 返回的对象赋给一个对象变量：
   Set ExcelSheet = CreateObject("Excel.Sheet")'的引用。
每个支持自动化的应用程序都至少提供一种对象类型。

例如，一个字处理应用程序可能会提供 Application 对象，Document 对象，以及 Toolbar 对象。要创建 ActiveX 对象，只需将 CreateObject 返回的对象赋给一个对象变量：

Dim ExcelSheet As Object'声明一个对象变量来存放该对象
Set ExcelSheet = CreateObject("Excel.Sheet")
ExcelSheet.Application.Visible = True '设置 Application 对象使 Excel 可见
ExcelSheet.Cells(1, 1).Value = "This is column A, row 1"'在表格的第一个单元中写些文本
ExcelSheet.SaveAs "C:\ TEST.xls"'将该表格保存到 C:\test.xls 目录
ExcelSheet.Application.Quit'使用应用程序对象的 Quit 方法关闭 Excel。
Set ExcelSheet = Nothing'释放该对象变量
上述代码将启动该应用程序创建该对象，在本例中就是创建一个 Microsoft Excel 电子数据表。对象创建后，就可以在代码中使用自定义的对象变量来引用该对象。在下面的示例中，可以使用对象变量 ExcelSheet 来访问新建对象的属性和方法，以及访问 Microsoft Excel 的其它对象，包括应用程序对象和单元格集合。

2、GetObject方法

描述：从文件中检索一个 Automation 对象， 或检索strProgID 参数所指定的对象
语法：object.GetObject(strPathname [,strProgID], [strPrefix])
参数：object必选项。WScript 对象。
        strPathname必选项。包含要获取的对象的完整路径和名称。
        strProgID可选项。表示对象的程序标识符(ProgID)的字符串。
        strPrefix可选项。如果指定了参数 strPrefix，Windows 脚本宿 主将在创建对象之后把对象的输出接口与脚本文件连接起来。在对象中触发事件时，Windows 脚本宿主将调用一个子例程，其名称包括 strPrefix 和事件的名称。

例如，如果 strPrefix 为 "MYOBJ_"，对象产生的事件为 "OnBegin,"，那么 Windows 脚本宿主将调用脚本中的 "MYOBJ_OnBegin" 子例程。


说明：如果当前存在对象的实例或者希望使用已经被装载的文件创建对象，可使用 GetObject 方法。如果当前不存在实例，而且不希望从已经装载的文件中启动对象，请使用 CreateObject 方法。


如果一个对象将自己注册为单实例对象（例如，Microsoft Word 7.0 中的 Word.Basic 对象），那么无论执行 CreateObject 多少次也只能创建对象的一个实例。此外，对于单实例的对象，如果用零长度的字符串语法("")调用，GetObject 总是返回同样的实例，而且如果省略路径参数将导致错误。使用 GetObject 不能获得对 Visual Basic 4.0 以及以前版本创建的 Microsoft Visual Basic(R)类的引用。

GetObject 适用于所有的 COM 类，不受创建对象所用语言的限制。

示例:在执行下列代码时，与指定的 strPathname 相关联的应用程序被启动，指定文件中的对象被激活。 如果 strPathname 是一个零长度的字符串 ("")， GetObject 将返回指定类型的新对象实例。如果 strPathname 参数完全被省略，GetObject 将返回指定类型的当前活动对象。如果不存在指定类型的对象，将发生错误。

Dim MyObject As Object
Set MyObject = GetObject("C:\CAD\SCHEMA.CAD")
MyApp = MyObject.Application
某些应用程序允许激活一个文件的某些部分。如果要这样做，需要在文件名后添加一个惊叹号 (!)，然后跟一个字符串，标识出文件中希望被激活的部分。关于如何创建该字符串的信息，请参阅创建对象的应用程序的有关文档。

例如，在一个绘图应用程序中，文件中存储的一幅图可能包含多层。可以使用下面的代码激活绘图文件中称为 schema.cad 的一层：

Set LayerObject = GetObject("C:\CAD\SCHEMA.CAD!Layer3")
如果不指定对象的类，COM 将根据所提供的文件名来确定要启动的应用程序和要激活的对象。但是，某些文件可能支持多个对象类。例如，一幅图纸可能支持三种不同类型的对象：一个应用程序对象，一个绘图对象，以及一个工具栏对象，它们都是同一个文件的组成部分。

在下例中，FIGMENT 是一个绘图应用程序的名称，DRAWING 是它支持的对象类型之一。

Dim MyObject As Object
Set MyObject = GetObject("C:\DRAWINGS\SAMPLE.DRW", "FIGMENT.DRAWING") 

3、Quit 方法

描述：退出执行，返回指定的错误代码。
语法：object.Quit [intErrorCode]
解释：object 必选项。 WScript 对象。
        intErrorCode可选项。如果包含此参数，WScript 将把它作为进程终止码返回。如果省略了 intErrorCode，WScript 将返回零 (0) 作为进程终止码。
例子：
下例退出执行并返回错误代码 1：

WScript.Quit
 
4、Sleep 方法

描述：使脚本进程在指定的毫秒数内处于非活动状态，然后继续执行。
语法：object.Sleep(intTime)
参数：object必选项。WScript 对象。
         intTime脚本进程在非活动状态的时间长度，以毫秒为单位。
说明：在睡眠状态下，脚本将继续执行所处理的事件。如果脚本引擎超时或被中断，睡眠将立即结束。
例子：

wscript.sleep(3000)
Set apprun = CreateObject("wscript.shell")
apprun.run "%windir%\notepad.exe"
此例子将会延迟3秒启动记事本。

5、timeout 方法

描述：设置脚本的生存时间
语法：wscript.timeout
例子：

wscript.timeout = 10
MsgBox "hello"
6、Echo 方法

描述：将输出发送到对话框或控制台。
语法：object.Echo [Arg1] [,Arg2] [,Arg3] ...
参数：object必选项。WScript 对象。
        Arg1, Arg2, Arg3 ...所显示的项的列表。
说明：如果宿主为 WScript.exe，本方法将把输出显示在对话框中；如果宿主为 CScript.exe，结果将显示在控制台上。每一项将被一个空格隔开。 在 CScript.exe 下，输出的末尾被加上换行符。如果未提供任何项，显示的将是空行。
例子：

Set fso = CreateObject("scripting.filesystemobject")
  Set f = fso.OpenTextFile("c:\test.txt")
wscript.echo f.ReadAll
将会显示这个文件里面的所有内容。这么看来，他的功能跟msgbox一样，不过不如他强大。

7、ConnectObject 方法

描述：将一个对象事件源连接到具有给定前缀的函数。
语法：object.ConnectObject strObject, strPrefix
参数：object必选项。WScript 对象。
        strObject要连接的对象的名称。
        strPrefix事件函数的前缀。
说明：
对象必须能够枚举自己类的事件集合。

例子：下例实例化了一个假想的对象，并将其连接到脚本文件。然后脚本调用该对象的 "SomeMethod" 方法。如果对象中发生了名为 "Event"的事件，将调用 MyEvent_Event 子例程。

Set MyObject = WScript.CreateObject("SomeObject")
MyObject.SomeMethod
WScript.ConnectObject MyObject, "MyEvent"
Sub MyEvent_Event(strName)
  WScript.Echo strName
End Sub
WScript.DisconnectObject MyObject
8、DisconnectObject 方法

描述：将原先与 Windows 脚本宿主连接的对象断开。
语法：object.DisconnectObject obj
参数：object必选项。WScript 对象。
   obj要断开连接的对象的名称。
说明：
如果所指定的对象尚未被连接到 Windows 脚本宿主，则此方法不起任何作用。
例子：
下例创建了一个假想的对象并将其连接到脚本文件。然后脚本调用对象的 "SomeMethod" 方法。如果对象中发生名为 "Event" 的错误，MyEvent_Event 子例程将被调用。

Set MyObject = WScript.CreateObject("SomeObject", "MyEvent")
MyObject.SomeMethod
Sub MyEvent_Event(strName)
  WScript.Echo strName
End Sub
WScript.DisconnectObject MyObject
VBScript进阶篇一
　　　　　　　　　　　　　　　　　　　　　　　　　　　　VBScript进阶篇一


 

 

一.编译型与解释型的区别

其实我们通过一张图就可以大致了解一下，他们运行机制。



想要了解更多，请猛戳：http://www.cnblogs.com/yinzhengjie/p/6229931.html

 

二.WSH的介绍

　　WSH是一个Windows管理工具。WSH创建了一个脚本运行的主环境，当脚本到达一台计算机时，WSH扮演主人的角色。WSH使脚本能够使用对象和服务，并提供脚本执行的准则。此外，WSH还负责安全管理以及调用适当的脚本引擎。WScript不属于脚本语言，他只属于脚本宿主提供的一个接口。其实cmd窗口也可以理解成一个脚本宿主而已，它是一个批处理宿主。

　　独立的脚本有多种不同类型，每种类型都有其各自的扩展名。下表列出了一些常见类型：

扩展名	脚本类型	说明
.bat	MS-DOS 批处理文件	MS-DOS 操作系统的批处理文件
.asp	ASP 页	Active Server Page 文件
.html	HTML 文件	Web 页
.js	JScript 文件	Windows 脚本
.vbs	VBScript 文件	Windows 脚本
.wsf	Windows 脚本宿主文件	Windows 脚本的容器或项目文件；由 WSH 2.0 或更高版本支持。
.wsh	Windows 脚本宿主文件	脚本文件的属性文件；由 WSH 1.0 或更高版本支持。
　　每种脚本类型都适于不同应用程序的需要，并且各有利弊。您所选择的脚本类型取决于您的需要。但在某些情况下，可以将整个问题分成几个小部分，为每个部分单独编写脚本，每个脚本都使用最适当的脚本语言。

这时，Windows 脚本宿主文件（WSF 文件）非常有用。WSF 文件可以将其他脚本文件作为脚本的一部分包括在其中。因此，多个 WSF 文件可以引用有用的函数库，它们是在一个位置创建和存储的。

 

三.WSH在命令行执行VBS

WSH提供了两个用于执行脚本的接口，一个用于命令行，一个用于Windows环境。这两个接口各使用不同的宿主程序作为VBScript引擎：

　　1>● cscript.exe：用于在命令行中(cmd窗口)运行脚本【在执行脚本时候打印的内容会在命令行中显示】;

　　2>● wscript.exe：用于在Windows环境中运行脚本(指得是你用鼠标双击运行一个"*.vsb"脚本，会出现一个对话框)【在执行脚本时候打印的内容会弹出一个脚本宿主对话框的形式显示】;

　　之所以有两个宿主程序，是因为cscript.exe被设计为从控制台窗口启动(一般来说是Windows中的MS-DOS窗口)其实就是我们工作中常用的cmd窗口，而wscript.exe则用于直接与Windows GUI进行交互。这两者就功能来讲几乎没有区别。

 

四.WScript对象

复制代码
 1 Option Explicit
 2 '@author :yinzhengjie
 3 'blog:http://www.cnblogs.com/yinzhengjie/tag/VBScript/
 4 'EMAIL:y1053419035@qq.com
 5 
 6 
 7 '提供对 Windows 脚本宿主对象模型根对象的访问。
 8 
 9 '说明
10 'WScript 对象是 Windows 脚本宿主对象模型层次结构的根对象。它从不需要在调用其属性和方法之前进行实例化，并且始终可在任何脚本文件中使用。WScript 对象提供对以下信息的访问： 
11 
12 '命令行参数， 
13 '脚本文件的名称， 
14 '宿主文件名， 
15 '宿主版本信息。 
16 'WScript 对象可用来： 
17 
18 '创建对象， 
19 '连接对象， 
20 '与对象断开连接， 
21 '同步事件， 
22 '以编程方式停止脚本的执行， 
23 '将信息输出到默认输出设备（Windows 对话框或命令控制台）。 
24 'WScript 对象可用来设置脚本运行的模式（交互模式或批处理模式）。
25 
26 '属性：
27 'WScript对象具有下列属性： 
28 '● Arguments 
29 '● FullName 
30 '● Interactive 
31 '● Name 
32 '● Path 
33 '● ScriptFullName 
34 '● ScriptName 
35 '● StdErr 
36 '● StdIn 
37 '● StdOut 
38 '● Version 
39 
40 
41 '方法：
42 'WScript的方法 
43 'WScript对象具有下列方法： 
44 '● CreateObject 
45 '● ConnectObject 
46 '● DisconnectObject 
47 '● Echo 
48 '● GetObject 
49 '● Quit 
50 '● Sleep 
复制代码
 

 

WScript属性详解：

 Arguments用法展示
 利用Arguments计算2个数字之间的和
 Arguments返回文件的绝对路径
 FullName用法展示
 Interactive用法展示
 Name 用法展示
 Path 用法展示
 ScriptFullName 用法展示
 ScriptName 用法展示

复制代码
 1 Option Explicit
 2 '@author :yinzhengjie
 3 'blog:http://www.cnblogs.com/yinzhengjie/tag/VBScript/
 4 'EMAIL:y1053419035@qq.com
 5 
 6 
 7 Dim row_input
 8 row_input = "您输入一些字符串是>>>：" '定义输出的值
 9 
10 WScript.Echo "请输入一些字符串：“  
11 Do While Not WScript.StdIn.AtEndOfLine
12     row_input = row_input & WScript.StdIn.Read(1) 'WScript.StdIn.Read(1)表示每次循环读取一个字符。
13 Loop
14 WScript.Echo  row_input '打印拼接后的字符
15 
16 
17 '注意：
18 'StdIn 属性返回一个表示标准输入流的对象。只可在使用 CScript.exe 时访问 StdIn、StdOut 和 StdErr 流。如果试图在使用 WScript.exe 时访问这些流，则会出错。
19 
20 
21 '以上代码在cmd窗口调用cscript宿主脚本执行结果如下：
22 'C:\Users\尹正杰>cscript  /nologo  C:\Users\尹正杰\Desktop\test.vbs
23 '请输入一些字符串：
24 '您好
25 '您输入一些字符串是>>>：您好
26 
27 'C:\Users\尹正杰>cscript  /nologo  C:\Users\尹正杰\Desktop\test.vbs
28 '请输入一些字符串：
29 '尹正杰
30 '您输入一些字符串是>>>：尹正杰
31 
32 'C:\Users\尹正杰>
复制代码
 Version 用法展示
 

WScript方法详解：

 Echo与Sleep 的用法展示
 Quit 用法展示
 

五.WshShortcut对象


复制代码
 1 Option Explicit
 2 '@author :yinzhengjie
 3 'blog:http://www.cnblogs.com/yinzhengjie/tag/VBScript/
 4 'EMAIL:y1053419035@qq.com
 5 
 6 
 7 Dim windows_shell,desktop,object_link
 8 
 9 Set windows_shell = CreateObject("WScript.Shell") '创建一个对象（实例化）
10 desktop = windows_shell.SpecialFolders("Desktop") '使用SpecialFolders方法获取桌面的路径
11 'MsgBox desktop
12 Set object_link = windows_shell.CreateShortcut(desktop & "\yinzhengjie_cmd.lnk") '定义链接文件路径并且给他起了一个名字叫“yinzhengjie_cmd”，注意以“.lnk”结尾标志着链接文件哟
13 
14 object_link.TargetPath = "C:\Windows\System32\cmd.exe" '源文件链接的绝对路径
15 
16 object_link.WorkingDirectory = "C:\Windows\System32" '源文件的工作路径，也就是他的所在目录（父目录）
17 
18 object_link.Hotkey = "" '可以不写这个参数
19 
20 
21 object_link.save '保存以上的配置，因为以上代码只是将数据加入到缓存中，并没有将数据写入磁盘中去，所以这个步骤是必须的！
22 
23 Set windows_shell = Nothing '以上代码执行完毕后，需要释放掉内存地址。
24 Set desktop = Nothing
25 Set object_link = Nothing 
复制代码
 

六.WshEnvironment 对象

复制代码
 1 Option Explicit
 2 '@author :yinzhengjie
 3 'blog:http://www.cnblogs.com/yinzhengjie/tag/VBScript/
 4 'EMAIL:y1053419035@qq.com
 5 
 6 
 7 '说明
 8 'WshEnvironment 对象是由 WshShell 对象的 Environment 属性返回的环境变量集。该变量集包含整个环境变量集（有名称和没有名称的）。若要在此集合中检索个别环境变量（和它们的值），请将环境变量名用作索引。
 9 
10 '示例
11 '下面代码显示一个环境变量。
12 
13 '[VBScript]  
14 Dim  WshShell,WshSysEnv
15 Set WshShell = WScript.CreateObject("WScript.Shell")
16 Set WshSysEnv = WshShell.Environment("SYSTEM")
17 WScript.Echo WshSysEnv("NUMBER_OF_PROCESSORS")
18 Set WshShell = Nothing
19 Set WshSysEnv = Nothing 
复制代码
 

七.WshNetwork 对象

复制代码
 1 Option Explicit
 2 '@author :yinzhengjie
 3 'blog:http://www.cnblogs.com/yinzhengjie/tag/VBScript/
 4 'EMAIL:y1053419035@qq.com
 5 
 6 '提供对计算机所连接的网络上共享资源的访问。
 7 
 8 '说明
 9 '如果需要连接网络共享和网络打印机、断开网络共享和网络打印机、映射或删除网络共享，或访问有关网络上用户的信息，请创建 WshNetwork 对象。
10 
11 '示例
12 '下面的示例演示对域名、计算机名、使用WshNetwork 对象的当前计算机系统的用户名的显示。
13 
14 
15 Dim WshNetwork
16 Set WshNetwork = WScript.CreateObject("WScript.Network")
17 WScript.Echo "Domain = " & WshNetwork.UserDomain
18 WScript.Echo "Computer Name = " & WshNetwork.ComputerName
19 WScript.Echo "User Name = " & WshNetwork.UserName
复制代码
 

当你的才华还撑不起你的野心的时候，你就应该静下心来学习。当你的能力还驾驭不了你的目标的时候，你就应该沉下心来历练。问问自己，想要怎样的人生。
